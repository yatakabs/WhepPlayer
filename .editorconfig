root = true

[*]
indent_size = 4
indent_style = space
charset = utf-8
tab_width = 4
trim_trailing_whitespace = true
insert_final_newline = true



[.gitignore]
end_of_line = lf
indent_style = tab

[.gitattributes]
end_of_line = lf
indent_style = tab
csharp_indent_labels = flush_left
csharp_using_directive_placement = outside_namespace:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:error
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:warning
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent

[*.{md,txt,pu}]
end_of_line = lf
indent_style = tab
charset = utf-8

[*.{sh,env,]
end_of_line = lf

[*.{bat,ps1,psm1}]
# Nothing special

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct,runsettings,csproj,snippet}]
indent_size = 2
indent_style = space

[NuGet.Config]
indent_size = 2

# JSON & YAML files
[*.{json,jsonc,jsonl,yml,yaml,slnf}]
indent_size = 2

[*.sln]
indent_style = tab
end_of_line = crlf

# CSV & TSV for Excel
[*.{csv|tsv}]
end_of_line = crlf
indent_style = tab
charset = utf-8-bom

# ASP.NET Razor & CSHTML
[*.{razor,cshtml}]
charset = utf-8-bom

# C# / VB code
[*.{cs,vb}]
end_of_line = crlf
csharp_indent_labels = flush_left
csharp_using_directive_placement = outside_namespace:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:error
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:warning
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_indent_block_contents = true:warning
csharp_indent_case_contents_when_block = false
csharp_space_around_binary_operators = before_and_after
csharp_style_throw_expression = true:warning
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:none
csharp_prefer_static_local_function = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_conditional_delegate_call = true:warning
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# C# / VB code
[*.{cs,vb}]
charset = utf-8
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true
csharp_prefer_braces = true:error
csharp_prefer_simple_default_expression = true:suggestion
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Indent settings
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left


# Use "this." always
dotnet_style_qualification_for_field = true:error
dotnet_style_qualification_for_event = true:error
dotnet_style_qualification_for_method = true:error
dotnet_style_qualification_for_property = true:error

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:warning


# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_blocks = always:suggestion
csharp_new_line_between_event_accessors = true
csharp_new_line_between_members_in_interface = true
csharp_new_line_between_members_in_class = true
csharp_new_line_between_members_in_struct = true
csharp_new_line_between_members_in_enum = true
csharp_new_line_between_members_in_object_initializers = true
csharp_new_line_between_query_expression_clauses = true
csharp_new_line_between_await_expression_and_its_lambda = true
csharp_new_line_between_embedded_statements = true
csharp_new_line_between_operators = true



csharp_using_directive_placement = outside_namespace:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_prefer_top_level_statements = true:warning
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_prefer_static_local_function = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:none
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_space_around_binary_operators = before_and_after
csharp_space_after_colon_in_inheritance_clause = true


# Space formatting
csharp_indent_labels = flush_left
csharp_using_directive_placement = outside_namespace:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:error
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:warning
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_indent_braces = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
dotnet_diagnostic.IDE0090.severity = suggestion
dotnet_diagnostic.IDE0060.severity = silent
dotnet_diagnostic.IDE0079.severity = silent
dotnet_diagnostic.IDE0100.severity = suggestion
dotnet_diagnostic.IDE0110.severity = suggestion
dotnet_diagnostic.IDE0150.severity = suggestion
dotnet_diagnostic.IDE0170.severity = suggestion
dotnet_diagnostic.IDE0180.severity = suggestion
dotnet_diagnostic.IDE0200.severity = silent
dotnet_diagnostic.IDE0260.severity = suggestion
dotnet_diagnostic.IDE0270.severity = suggestion
dotnet_diagnostic.IDE0280.severity = suggestion
dotnet_diagnostic.IDE1005.severity = suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_conditional_delegate_call = true:warning

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.readonly_static_fields.severity = warning
dotnet_naming_rule.readonly_static_fields.symbols = readonly_static_fields
dotnet_naming_rule.readonly_static_fields.style = camel_case

dotnet_naming_rule.readonly_fields.severity = warning
dotnet_naming_rule.readonly_fields.symbols = readonly_fields
dotnet_naming_rule.readonly_fields.style = camel_case

dotnet_naming_rule.const_fields.severity = warning
dotnet_naming_rule.const_fields.symbols = const_fields
dotnet_naming_rule.const_fields.style = pascal_case

dotnet_naming_rule.fields.severity = warning
dotnet_naming_rule.fields.symbols = fields
dotnet_naming_rule.fields.style = camel_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.fields.applicable_kinds = field
dotnet_naming_symbols.fields.applicable_accessibilities = public, internal, protected, private, protected_internal, private_protected
dotnet_naming_symbols.fields.required_modifiers =

dotnet_naming_symbols.readonly_static_fields.applicable_kinds = field
dotnet_naming_symbols.readonly_static_fields.applicable_accessibilities = public, internal, protected, private, protected_internal, private_protected
dotnet_naming_symbols.readonly_static_fields.required_modifiers = readonly, static

dotnet_naming_symbols.readonly_fields.applicable_kinds = field
dotnet_naming_symbols.readonly_fields.applicable_accessibilities = public, internal, protected, private, protected_internal, private_protected
dotnet_naming_symbols.readonly_fields.required_modifiers = readonly

dotnet_naming_symbols.const_fields.applicable_kinds = field
dotnet_naming_symbols.const_fields.applicable_accessibilities = public, internal, protected, private, protected_internal, private_protected
dotnet_naming_symbols.const_fields.required_modifiers = const


csharp_preferred_modifier_order =  public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case


dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_code_quality_unused_parameters = non_public:suggestion
dotnet_style_readonly_field = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_predefined_type_for_member_access = true:none
dotnet_style_require_accessibility_modifiers = for_non_interface_members:error
dotnet_style_allow_multiple_blank_lines_experimental = true:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental = true:warning
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent


# ---------------------------------------
# Compier Diagnostics : C# Specific
# ---------------------------------------
# CS1573: Parameter has no matching param tag in the XML comment (but other parameters do)
dotnet_diagnostic.CS1573.severity = silent

# CS1998: Async method lacks 'await' operators and will run synchronously
dotnet_diagnostic.CS1998.severity = warning

# ---------------------------------------
# Compier Diagnostics : Coding Style
# ---------------------------------------
# IDE0019: Use pattern matching
dotnet_diagnostic.IDE0019.severity = none

dotnet_diagnostic.IDE0065.severity = warning
dotnet_diagnostic.IDE0043.severity = error
dotnet_diagnostic.IDE0009.severity = error
dotnet_diagnostic.IDE0010.severity = suggestion
dotnet_diagnostic.IDE0031.severity = suggestion
dotnet_diagnostic.IDE0032.severity = warning


# IDE0037 'Member name can be simplified'
dotnet_diagnostic.IDE0037.severity = silent

# IDE0036: Order modifiers (csharp_preferred_modifier_order )
dotnet_diagnostic.IDE0036.severity = warning

dotnet_diagnostic.IDE0040.severity = error

# IDE0055: Formatting rule
dotnet_diagnostic.IDE0055.severity = warning

# IDE0059 Unnecessary assignment of a value to 'result'
dotnet_diagnostic.IDE0059.severity = silent

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = none

dotnet_diagnostic.IDE0120.severity = suggestion
dotnet_diagnostic.IDE0130.severity = warning
dotnet_diagnostic.IDE0161.severity = warning
dotnet_diagnostic.IDE0210.severity = suggestion
dotnet_diagnostic.IDE1006.severity = error

# IDE2000: Disallow multiple blank lines
dotnet_style_allow_multiple_blank_lines_experimental = false:silent
dotnet_diagnostic.IDE2000.severity = suggestion

dotnet_diagnostic.IDE2002.severity = suggestion
dotnet_diagnostic.IDE2003.severity = warning


dotnet_diagnostic.CA1816.severity = warning

# Code Analytics : Code Quality
dotnet_diagnostic.CA1003.severity = error
dotnet_diagnostic.CA1008.severity = error
dotnet_diagnostic.CA1047.severity = error
dotnet_diagnostic.CA1041.severity = warning
dotnet_diagnostic.CA1050.severity = error# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1051.severity = error
dotnet_diagnostic.CA1063.severity = warning
dotnet_diagnostic.CA1064.severity = error
dotnet_diagnostic.CA1065.severity = none
dotnet_diagnostic.CA1068.severity = error
dotnet_diagnostic.CA1070.severity = error
dotnet_diagnostic.CA1507.severity = warning
dotnet_diagnostic.CA1508.severity = error 
dotnet_diagnostic.CA1700.severity = suggestion
dotnet_diagnostic.CA1707.severity = error
dotnet_diagnostic.CA1716.severity = warning # Identifiers should not match keywords
dotnet_diagnostic.CA1724.severity = warning # Type names should not match namespaces
dotnet_diagnostic.CA1725.severity = warning
dotnet_diagnostic.CA1829.severity = warning
dotnet_diagnostic.CA1838.severity = warning

# ---------------------------------------------
# Code Analytics : Culture
# ---------------------------------------------
dotnet_diagnostic.CA1304.severity = warning
dotnet_diagnostic.CA1305.severity = warning
dotnet_diagnostic.CA1306.severity = warning
dotnet_diagnostic.CA1307.severity = warning


# ---------------------------------------------
# Code Analytics : Reliability & Security
# ---------------------------------------------
dotnet_diagnostic.CA2007.severity = suggestion
dotnet_diagnostic.CA2011.severity = error
dotnet_diagnostic.CA2012.severity = error
dotnet_diagnostic.CA2016.severity = warning
dotnet_diagnostic.CA2153.severity = error
dotnet_diagnostic.CA2245.severity = error

# ---------------------------------------------
# Code Analytics : Usage
# ---------------------------------------------

# CA2253 Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = warning

# CA2254 Template should be a static expression
dotnet_diagnostic.CA2254.severity = warning

# ---------------------------------------------------------------------
# Roslynator
# ---------------------------------------------------------------------

# RCS1047 Non-asynchronous method name should not end with 'Async'.
dotnet_diagnostic.RCS1047.severity = suggestion

# RCS1118 Mark local variable as const.
dotnet_diagnostic.RCS1118.severity = suggestion

# RCS1093 Remove file with no code.
dotnet_diagnostic.RCS1093.severity = warning

# RCS1160 Abstract type should not have public constructors.
dotnet_diagnostic.RCS1160.severity = warning

# RCS1175 Unused 'this' parameter.
dotnet_diagnostic.RCS1175.severity = warning

# RCS1251 Remove unnecessary braces from record declaration.
dotnet_diagnostic.RCS1251.severity = suggestion

# SYSLIB1045 Convert to 'GeneratedRegexAttribute'.
dotnet_diagnostic.SYSLIB1045.severity = suggestion


# ---------------------------------------------
# Spell check
# ---------------------------------------------
dotnet_diagnostic.VSSpell001.severity = silent # VSSpell001: Spell Check
dotnet_diagnostic.VSSpell002.severity = silent # VSSpell002: Ignore word 'XXX'

# RCS1227: Validate arguments correctly.
dotnet_diagnostic.RCS1227.severity = warning

# RCS1021: Convert lambda expression body to expression body.
dotnet_diagnostic.RCS1021.severity = silent

# RCS1163: Unused parameter.
dotnet_diagnostic.RCS1163.severity = silent

# RCS1213: Remove unused member declaration.
dotnet_diagnostic.RCS1213.severity = silent

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = warning

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = silent

# Default severity for analyzer diagnostics with category 'Performance'
dotnet_analyzer_diagnostic.category-Performance.severity = warning

# RCS1118: Validate arguments correctly.
dotnet_diagnostic.RCS1118.severity = silent

# RCS1251 Remove unnecessary braces from record declaration.
dotnet_diagnostic.RCS1251.severity = suggestion

roslynator_refactoring.wrap_arguments.enabled = true
roslynator_refactoring.wrap_binary_expression.enabled = true
roslynator_refactoring.wrap_call_chain.enabled = true
roslynator_refactoring.wrap_conditional_expression.enabled = true
roslynator_refactoring.wrap_constraint_clauses.enabled = true
roslynator_refactoring.wrap_initializer_expressions.enabled = true
roslynator_refactoring.wrap_lines_in_preprocessor_directive.enabled = true
roslynator_refactoring.wrap_lines_in_region.enabled = true
roslynator_refactoring.wrap_lines_in_try_catch.enabled = true
roslynator_refactoring.wrap_parameters.enabled = true
roslynator_refactoring.wrap_statements_in_condition.enabled = true
roslynator_refactoring.wrap_statements_in_using_statement.enabled = true

# ---------------------------------------------------------------------
# Enabled fixes
# ---------------------------------------------------------------------

# IDE200 Avoid multiple blank lines
dotnet_diagnostic.IDE2000.severity = warning

# CA2215 Dispose methods should call base class dispose
dotnet_analyzer_diagnostic.CA2215.severity = warning

# CA1309 Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = warning
dotnet_analyzer_diagnostic.CA1309.severity = warning

# RCS0044 Use carriage return + linefeed as new line
dotnet_diagnostic.RCS0044.severity = warning

# RCS1036 Remove unnecessary blank line.
dotnet_diagnostic.RCS1036.severity = warning

# RCS1189 Add or remove region name.
dotnet_diagnostic.RCS1189.severity = suggestion

# RCS1211 Remove unnecessary else.
dotnet_diagnostic.RCS1211.severity = warning

# RCS1241 Implement non-generic counterpart.
dotnet_diagnostic.RCS1241.severity = warning

# xUnit1026: Theory methods should use all of their parameters
dotnet_diagnostic.xUnit1026.severity = warning

# CA1711 Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = warning

# CA1720 Identifier contains type name
dotnet_diagnostic.CA1720.severity = warning

# S2114: Collections should not be passed as arguments to their own methods
dotnet_diagnostic.S2114.severity = warning

# S2115: A secure password should be used when connecting to a database
dotnet_diagnostic.S2115.severity = warning

# S3415: Assertion arguments should be passed in the correct order
dotnet_diagnostic.S3415.severity = warning

# S4005: "System.Uri" arguments should be used instead of strings
dotnet_diagnostic.S4005.severity = warning

# S4200: Native methods should be wrapped
dotnet_diagnostic.S4200.severity = warning

# S3973: A conditionally executed single line should be denoted by indentation
dotnet_diagnostic.S3973.severity = warning

# SA1137: Elements should have the same indentation
dotnet_diagnostic.SA1137.severity = warning

# RCS1080: Use 'Count/Length' property instead of 'Any' method.
dotnet_diagnostic.RCS1080.severity = warning

# RCS1235: Optimize method call.
dotnet_diagnostic.RCS1235.severity = warning

# RCS1201: Use method chaining.
dotnet_diagnostic.RCS1201.severity = warning

# RCS1077: Optimize LINQ method call.
dotnet_diagnostic.RCS1077.severity = warning

# RCS1046: Asynchronous method name should end with 'Async'.
dotnet_diagnostic.RCS1046.severity = none

# RCS1047: Non-asynchronous method name should not end with 'Async'.
dotnet_diagnostic.RCS1047.severity = warning

# RCS1113: Use 'string.IsNullOrEmpty' method.
dotnet_diagnostic.RCS1113.severity = warning


# ---------------------------------------------------------------------
# Disabled fixes
# ---------------------------------------------------------------------
# IDE0075 Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = none

# CA1852 Seal internal types
dotnet_diagnostic.CA1852.severity = none

# RCS1021 Convert lambda expression body to expression body.
dotnet_diagnostic.RCS1021.severity = none

# RCS1104 Simplify conditional expression.
dotnet_diagnostic.RCS1104.severity = none

# RCS1124 Inline local variable.
dotnet_diagnostic.RCS1124.severity = none

# RCS1161 Enum should declare explicit values.
dotnet_diagnostic.RCS1161.severity = none

# RCS1163 Unused parameter.
dotnet_diagnostic.RCS1163.severity = none

# RCS1213 Remove unused member declaration.
dotnet_diagnostic.RCS1213.severity = none

# RCS1238: Avoid nested ?: operators.
dotnet_diagnostic.RCS1238.severity = none

# xUnit1004: Test methods should not be skipped
dotnet_diagnostic.xUnit1004.severity = none

# xUnit1004: Test methods should not be skipped
dotnet_diagnostic.xUnit1004.severity = none

# CA1000 Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = none

# RCS1207: Convert anonymous function to method group.
dotnet_diagnostic.RCS1207.severity = none
dotnet_style_prefer_collection_expression = true:suggestion
